#!/usr/bin/env bash

usage() {
  echo "Usage: $0 [install|uninstall]"
  exit 1
}

install_dotfile() {
  local source_file="$1"
  local target_file="$2"
  local source_path="$HOME/dotfiles/$source_file"
  local target_path="$HOME/$target_file"

  if [ ! -e "$source_path" ]; then
    echo -e "Error: Source file \033[1m$source_path\033[0m does not exist." >&2
    return 1
  fi

  echo -e "Installing \033[1m$source_path\033[0m to \033[1m$target_path\033[0m"

  if [ -d "$source_path" ]; then
    echo -e "Installing directory \033[1m$source_path\033[0m to \033[1m$target_path\033[0m"
    find "$source_path" -type f -o -type l | while read -r file; do
      rel_path="${file#"$source_path/"}"
      dest="$target_path/$rel_path"
      mkdir -p "$(dirname "$dest")"
      if [ -e "$dest" ] && [ ! -L "$dest" ]; then
        echo -e "Backing up existing $dest to $dest.bak"
        mv "$dest" "$dest.bak"
      fi
      ln -sf "$file" "$dest"
    done
  else
    echo -e "Installing \033[1m$source_path\033[0m to \033[1m$target_path\033[0m"
    mkdir -p "$(dirname "$target_path")"
    if [ -e "$target_path" ] && [ ! -L "$target_path" ]; then
      echo -e "Backing up existing $target_path to $target_path.bak"
      mv "$target_path" "$target_path.bak"
    fi
    ln -sf "$source_path" "$target_path"
  fi
}

uninstall_dotfile() {
  local target_file="$1"
  local target_path="$HOME/$target_file"

  if [ -d "$target_path" ]; then
    echo -e "Uninstalling directory \033[1m$target_path\033[0m"
    find "$target_path" -type l | while read -r file; do
      echo -e "Removing symlink \033[1m$file\033[0m"
      rm "$file"
      if [ -e "$file.bak" ]; then
        echo "Restoring backup $file.bak"
        mv "$file.bak" "$file"
      fi
    done
  elif [ -L "$target_path" ]; then
    echo -e "Uninstalling \033[1m$target_path\033[0m"
    rm "$target_path"

    if [ -e "$target_path.bak" ]; then
      echo "Restoring backup $target_path.bak"
      mv "$target_path.bak" "$target_path"
    fi
  else
    echo -e "\033[1;33mFile $target_path is not a symlink, skipping ...\033[0m"
  fi
}

post_install() {
  echo -e "Running post install"

  if command -v bat >/dev/null 2>&1; then
    bat cache --build
  fi
}

[ $# -eq 2 ] || usage

action="$1"
manifest="$2"

files=()

if [ -f "$manifest" ]; then
  while IFS= read -r line; do
    [ -n "$line" ] || continue
    files+=("$line")
  done < "$manifest"
else
  echo "Manifest $manifest not found." >&2
  exit 1
fi

case "$action" in
  install)
    for entry in "${files[@]}"
    do
      source="${entry%%=*}"
      target="${entry#*=}"
      install_dotfile "$source" "$target"
    done

    post_install
  ;;

  uninstall)
    for entry in "${files[@]}"
    do
      target="${entry#*=}"
      uninstall_dotfile "$target"
    done
  ;;

  *)
    usage
  ;;
esac
